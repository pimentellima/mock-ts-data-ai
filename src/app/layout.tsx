import GithubIcon from "@/components/github-icon"
import { Toaster } from "@/components/ui/toaster"
import { UserProfile } from "@clerk/nextjs"
import { auth, currentUser } from "@clerk/nextjs/server"
import { ArrowLeft } from "lucide-react"
import type { Metadata } from "next"
import { Inter } from "next/font/google"
import Link from "next/link"
import "./globals.css"
import Providers from "./providers"
import UserDialog from "./user-dialog"
import { db } from "@/drizzle/db"
import { usage } from "@/drizzle/schema"
import { eq } from "drizzle-orm"

const inter = Inter({ subsets: ["latin"] })

export const metadata: Metadata = {
    title: "Create Next App",
    description: "Generated by create next app",
}

export default async function RootLayout({
    children,
}: Readonly<{
    children: React.ReactNode
}>) {
    const { userId } = auth()
    const user = await currentUser()
    const userCredits = user
        ? (
              await db.query.usage.findFirst({
                  columns: { credits: true },
                  where: eq(usage.userId, user.id),
              })
          )?.credits || 0
        : 0

    return (
        <html lang="en">
            <body className={inter.className}>
                <Providers>
                    <Toaster />
                    <div className="min-h-screen flex flex-col justify-between">
                        <header
                            className="sticky top-0 h-14 py-2 border-b w-full bg-background
                            flex justify-between items-center px-40 z-10"
                        >
                            <div className="flex gap-2 items-center">
                                <Link
                                    className="hover:underline underline-offset-4 text-sm"
                                    href="/"
                                >
                                    Generate
                                </Link>
                            </div>
                            <div className="flex gap-4 items-center">
                                <Link
                                    className="hover:underline underline-offset-4 text-sm"
                                    href="/buy-credits"
                                >
                                    Buy credits
                                </Link>
                                {userId && user ? (
                                    <UserDialog
                                        user={JSON.parse(JSON.stringify(user))}
                                        userCredits={userCredits}
                                    />
                                ) : (
                                    <>
                                        <Link
                                            className="hover:underline underline-offset-4 text-sm"
                                            href="/sign-in"
                                        >
                                            Sign in
                                        </Link>
                                        <Link
                                            className="hover:underline underline-offset-4 text-sm"
                                            href="/sign-up"
                                        >
                                            Sign up
                                        </Link>
                                    </>
                                )}
                            </div>
                        </header>
                        <div className="mx-40">{children}</div>
                        <footer
                            className="h-14 mt-10 border-t w-full 
                            flex items-center justify-between px-40"
                        >
                            <p>
                                <span className="opacity-85">
                                    Created with ❤️ by{" "}
                                </span>
                                <Link
                                    target="_blank"
                                    href={"https://github.com/pimentellima"}
                                    className="text-primary opacity-85 hover:opacity-100
                                transition-opacity hover:underline underline-offset-2"
                                >
                                    pimentellima
                                </Link>
                                .
                            </p>
                            <Link
                                target="_blank"
                                href={
                                    "https://github.com/pimentellima/mock-ts-data-ai"
                                }
                                className="text-white hover:opacity-100 opacity-70
                                transition-opacity"
                            >
                                <GithubIcon className="w-10 h-10 fill-primary" />
                            </Link>
                        </footer>
                    </div>
                </Providers>
            </body>
        </html>
    )
}
